// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChatMessagesColumns holds the columns for the "chat_messages" table.
	ChatMessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "message_id", Type: field.TypeString},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"user", "assistant", "system", "error"}},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "hidden_context", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "model", Type: field.TypeString, Nullable: true},
		{Name: "session_id", Type: field.TypeInt},
	}
	// ChatMessagesTable holds the schema information for the "chat_messages" table.
	ChatMessagesTable = &schema.Table{
		Name:       "chat_messages",
		Columns:    ChatMessagesColumns,
		PrimaryKey: []*schema.Column{ChatMessagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "chat_messages_chat_sessions_messages",
				Columns:    []*schema.Column{ChatMessagesColumns[7]},
				RefColumns: []*schema.Column{ChatSessionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "chatmessage_message_id",
				Unique:  true,
				Columns: []*schema.Column{ChatMessagesColumns[1]},
			},
			{
				Name:    "chatmessage_session_id",
				Unique:  false,
				Columns: []*schema.Column{ChatMessagesColumns[7]},
			},
			{
				Name:    "chatmessage_session_id_timestamp",
				Unique:  false,
				Columns: []*schema.Column{ChatMessagesColumns[7], ChatMessagesColumns[5]},
			},
			{
				Name:    "chatmessage_role",
				Unique:  false,
				Columns: []*schema.Column{ChatMessagesColumns[2]},
			},
		},
	}
	// ChatSessionsColumns holds the columns for the "chat_sessions" table.
	ChatSessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "session_id", Type: field.TypeString},
		{Name: "endpoint_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "selected_model", Type: field.TypeString, Nullable: true},
		{Name: "project_id", Type: field.TypeInt},
	}
	// ChatSessionsTable holds the schema information for the "chat_sessions" table.
	ChatSessionsTable = &schema.Table{
		Name:       "chat_sessions",
		Columns:    ChatSessionsColumns,
		PrimaryKey: []*schema.Column{ChatSessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "chat_sessions_projects_chat_sessions",
				Columns:    []*schema.Column{ChatSessionsColumns[6]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "chatsession_session_id",
				Unique:  true,
				Columns: []*schema.Column{ChatSessionsColumns[1]},
			},
			{
				Name:    "chatsession_project_id_endpoint_id",
				Unique:  true,
				Columns: []*schema.Column{ChatSessionsColumns[6], ChatSessionsColumns[2]},
			},
			{
				Name:    "chatsession_project_id",
				Unique:  false,
				Columns: []*schema.Column{ChatSessionsColumns[6]},
			},
			{
				Name:    "chatsession_endpoint_id",
				Unique:  false,
				Columns: []*schema.Column{ChatSessionsColumns[2]},
			},
		},
	}
	// ExportJobsColumns holds the columns for the "export_jobs" table.
	ExportJobsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "job_id", Type: field.TypeString, Unique: true},
		{Name: "export_type", Type: field.TypeString},
		{Name: "output_path", Type: field.TypeString},
		{Name: "stage", Type: field.TypeString, Default: "starting"},
		{Name: "progress", Type: field.TypeFloat64, Default: 0},
		{Name: "current_file", Type: field.TypeString, Nullable: true},
		{Name: "total_files", Type: field.TypeInt, Default: 0},
		{Name: "processed_files", Type: field.TypeInt, Default: 0},
		{Name: "is_complete", Type: field.TypeBool, Default: false},
		{Name: "has_error", Type: field.TypeBool, Default: false},
		{Name: "error_message", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "is_cancelled", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "completed_at", Type: field.TypeTime, Nullable: true},
		{Name: "project_export_jobs", Type: field.TypeInt, Nullable: true},
	}
	// ExportJobsTable holds the schema information for the "export_jobs" table.
	ExportJobsTable = &schema.Table{
		Name:       "export_jobs",
		Columns:    ExportJobsColumns,
		PrimaryKey: []*schema.Column{ExportJobsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "export_jobs_projects_export_jobs",
				Columns:    []*schema.Column{ExportJobsColumns[16]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "path", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "ai_model", Type: field.TypeString, Nullable: true, Default: "anthropic/claude-3.5-haiku-20241022"},
		{Name: "ai_prompt", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "ai_suggestion_order", Type: field.TypeJSON, Nullable: true},
		{Name: "ai_suggestion_model", Type: field.TypeString, Nullable: true},
		{Name: "ai_suggestion_created_at", Type: field.TypeTime, Nullable: true},
		{Name: "ai_highlight_model", Type: field.TypeString, Nullable: true, Default: "anthropic/claude-sonnet-4"},
		{Name: "ai_highlight_prompt", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "active_tab", Type: field.TypeString, Nullable: true, Default: "clips"},
		{Name: "ai_silence_improvements", Type: field.TypeJSON, Nullable: true},
		{Name: "ai_silence_model", Type: field.TypeString, Nullable: true},
		{Name: "ai_silence_created_at", Type: field.TypeTime, Nullable: true},
		{Name: "highlight_order", Type: field.TypeJSON, Nullable: true},
		{Name: "order_history", Type: field.TypeJSON, Nullable: true},
		{Name: "order_history_index", Type: field.TypeInt, Nullable: true, Default: -1},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:       "projects",
		Columns:    ProjectsColumns,
		PrimaryKey: []*schema.Column{ProjectsColumns[0]},
	}
	// SettingsColumns holds the columns for the "settings" table.
	SettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "key", Type: field.TypeString, Unique: true},
		{Name: "value", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// SettingsTable holds the schema information for the "settings" table.
	SettingsTable = &schema.Table{
		Name:       "settings",
		Columns:    SettingsColumns,
		PrimaryKey: []*schema.Column{SettingsColumns[0]},
	}
	// VideoClipsColumns holds the columns for the "video_clips" table.
	VideoClipsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "file_path", Type: field.TypeString},
		{Name: "duration", Type: field.TypeFloat64, Nullable: true},
		{Name: "format", Type: field.TypeString, Nullable: true},
		{Name: "width", Type: field.TypeInt, Nullable: true},
		{Name: "height", Type: field.TypeInt, Nullable: true},
		{Name: "file_size", Type: field.TypeInt64, Nullable: true},
		{Name: "transcription", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "transcription_words", Type: field.TypeJSON, Nullable: true},
		{Name: "transcription_language", Type: field.TypeString, Nullable: true},
		{Name: "transcription_duration", Type: field.TypeFloat64, Nullable: true},
		{Name: "highlights", Type: field.TypeJSON, Nullable: true},
		{Name: "suggested_highlights", Type: field.TypeJSON, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "highlights_history", Type: field.TypeJSON, Nullable: true},
		{Name: "highlights_history_index", Type: field.TypeInt, Nullable: true, Default: -1},
		{Name: "transcription_state", Type: field.TypeString, Nullable: true, Default: "idle"},
		{Name: "transcription_error", Type: field.TypeString, Nullable: true},
		{Name: "transcription_started_at", Type: field.TypeTime, Nullable: true},
		{Name: "transcription_completed_at", Type: field.TypeTime, Nullable: true},
		{Name: "project_video_clips", Type: field.TypeInt, Nullable: true},
	}
	// VideoClipsTable holds the schema information for the "video_clips" table.
	VideoClipsTable = &schema.Table{
		Name:       "video_clips",
		Columns:    VideoClipsColumns,
		PrimaryKey: []*schema.Column{VideoClipsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "video_clips_projects_video_clips",
				Columns:    []*schema.Column{VideoClipsColumns[23]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChatMessagesTable,
		ChatSessionsTable,
		ExportJobsTable,
		ProjectsTable,
		SettingsTable,
		VideoClipsTable,
	}
)

func init() {
	ChatMessagesTable.ForeignKeys[0].RefTable = ChatSessionsTable
	ChatSessionsTable.ForeignKeys[0].RefTable = ProjectsTable
	ExportJobsTable.ForeignKeys[0].RefTable = ProjectsTable
	VideoClipsTable.ForeignKeys[0].RefTable = ProjectsTable
}
