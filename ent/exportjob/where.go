// Code generated by ent, DO NOT EDIT.

package exportjob

import (
	"MYAPP/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLTE(FieldID, id))
}

// JobID applies equality check predicate on the "job_id" field. It's identical to JobIDEQ.
func JobID(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldJobID, v))
}

// ExportType applies equality check predicate on the "export_type" field. It's identical to ExportTypeEQ.
func ExportType(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldExportType, v))
}

// OutputPath applies equality check predicate on the "output_path" field. It's identical to OutputPathEQ.
func OutputPath(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldOutputPath, v))
}

// Stage applies equality check predicate on the "stage" field. It's identical to StageEQ.
func Stage(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldStage, v))
}

// Progress applies equality check predicate on the "progress" field. It's identical to ProgressEQ.
func Progress(v float64) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldProgress, v))
}

// CurrentFile applies equality check predicate on the "current_file" field. It's identical to CurrentFileEQ.
func CurrentFile(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldCurrentFile, v))
}

// TotalFiles applies equality check predicate on the "total_files" field. It's identical to TotalFilesEQ.
func TotalFiles(v int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldTotalFiles, v))
}

// ProcessedFiles applies equality check predicate on the "processed_files" field. It's identical to ProcessedFilesEQ.
func ProcessedFiles(v int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldProcessedFiles, v))
}

// IsComplete applies equality check predicate on the "is_complete" field. It's identical to IsCompleteEQ.
func IsComplete(v bool) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldIsComplete, v))
}

// HasError applies equality check predicate on the "has_error" field. It's identical to HasErrorEQ.
func HasError(v bool) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldHasError, v))
}

// ErrorMessage applies equality check predicate on the "error_message" field. It's identical to ErrorMessageEQ.
func ErrorMessage(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldErrorMessage, v))
}

// IsCancelled applies equality check predicate on the "is_cancelled" field. It's identical to IsCancelledEQ.
func IsCancelled(v bool) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldIsCancelled, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldUpdatedAt, v))
}

// CompletedAt applies equality check predicate on the "completed_at" field. It's identical to CompletedAtEQ.
func CompletedAt(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldCompletedAt, v))
}

// JobIDEQ applies the EQ predicate on the "job_id" field.
func JobIDEQ(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldJobID, v))
}

// JobIDNEQ applies the NEQ predicate on the "job_id" field.
func JobIDNEQ(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNEQ(FieldJobID, v))
}

// JobIDIn applies the In predicate on the "job_id" field.
func JobIDIn(vs ...string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldIn(FieldJobID, vs...))
}

// JobIDNotIn applies the NotIn predicate on the "job_id" field.
func JobIDNotIn(vs ...string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNotIn(FieldJobID, vs...))
}

// JobIDGT applies the GT predicate on the "job_id" field.
func JobIDGT(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGT(FieldJobID, v))
}

// JobIDGTE applies the GTE predicate on the "job_id" field.
func JobIDGTE(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGTE(FieldJobID, v))
}

// JobIDLT applies the LT predicate on the "job_id" field.
func JobIDLT(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLT(FieldJobID, v))
}

// JobIDLTE applies the LTE predicate on the "job_id" field.
func JobIDLTE(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLTE(FieldJobID, v))
}

// JobIDContains applies the Contains predicate on the "job_id" field.
func JobIDContains(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldContains(FieldJobID, v))
}

// JobIDHasPrefix applies the HasPrefix predicate on the "job_id" field.
func JobIDHasPrefix(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldHasPrefix(FieldJobID, v))
}

// JobIDHasSuffix applies the HasSuffix predicate on the "job_id" field.
func JobIDHasSuffix(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldHasSuffix(FieldJobID, v))
}

// JobIDEqualFold applies the EqualFold predicate on the "job_id" field.
func JobIDEqualFold(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEqualFold(FieldJobID, v))
}

// JobIDContainsFold applies the ContainsFold predicate on the "job_id" field.
func JobIDContainsFold(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldContainsFold(FieldJobID, v))
}

// ExportTypeEQ applies the EQ predicate on the "export_type" field.
func ExportTypeEQ(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldExportType, v))
}

// ExportTypeNEQ applies the NEQ predicate on the "export_type" field.
func ExportTypeNEQ(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNEQ(FieldExportType, v))
}

// ExportTypeIn applies the In predicate on the "export_type" field.
func ExportTypeIn(vs ...string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldIn(FieldExportType, vs...))
}

// ExportTypeNotIn applies the NotIn predicate on the "export_type" field.
func ExportTypeNotIn(vs ...string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNotIn(FieldExportType, vs...))
}

// ExportTypeGT applies the GT predicate on the "export_type" field.
func ExportTypeGT(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGT(FieldExportType, v))
}

// ExportTypeGTE applies the GTE predicate on the "export_type" field.
func ExportTypeGTE(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGTE(FieldExportType, v))
}

// ExportTypeLT applies the LT predicate on the "export_type" field.
func ExportTypeLT(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLT(FieldExportType, v))
}

// ExportTypeLTE applies the LTE predicate on the "export_type" field.
func ExportTypeLTE(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLTE(FieldExportType, v))
}

// ExportTypeContains applies the Contains predicate on the "export_type" field.
func ExportTypeContains(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldContains(FieldExportType, v))
}

// ExportTypeHasPrefix applies the HasPrefix predicate on the "export_type" field.
func ExportTypeHasPrefix(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldHasPrefix(FieldExportType, v))
}

// ExportTypeHasSuffix applies the HasSuffix predicate on the "export_type" field.
func ExportTypeHasSuffix(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldHasSuffix(FieldExportType, v))
}

// ExportTypeEqualFold applies the EqualFold predicate on the "export_type" field.
func ExportTypeEqualFold(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEqualFold(FieldExportType, v))
}

// ExportTypeContainsFold applies the ContainsFold predicate on the "export_type" field.
func ExportTypeContainsFold(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldContainsFold(FieldExportType, v))
}

// OutputPathEQ applies the EQ predicate on the "output_path" field.
func OutputPathEQ(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldOutputPath, v))
}

// OutputPathNEQ applies the NEQ predicate on the "output_path" field.
func OutputPathNEQ(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNEQ(FieldOutputPath, v))
}

// OutputPathIn applies the In predicate on the "output_path" field.
func OutputPathIn(vs ...string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldIn(FieldOutputPath, vs...))
}

// OutputPathNotIn applies the NotIn predicate on the "output_path" field.
func OutputPathNotIn(vs ...string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNotIn(FieldOutputPath, vs...))
}

// OutputPathGT applies the GT predicate on the "output_path" field.
func OutputPathGT(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGT(FieldOutputPath, v))
}

// OutputPathGTE applies the GTE predicate on the "output_path" field.
func OutputPathGTE(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGTE(FieldOutputPath, v))
}

// OutputPathLT applies the LT predicate on the "output_path" field.
func OutputPathLT(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLT(FieldOutputPath, v))
}

// OutputPathLTE applies the LTE predicate on the "output_path" field.
func OutputPathLTE(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLTE(FieldOutputPath, v))
}

// OutputPathContains applies the Contains predicate on the "output_path" field.
func OutputPathContains(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldContains(FieldOutputPath, v))
}

// OutputPathHasPrefix applies the HasPrefix predicate on the "output_path" field.
func OutputPathHasPrefix(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldHasPrefix(FieldOutputPath, v))
}

// OutputPathHasSuffix applies the HasSuffix predicate on the "output_path" field.
func OutputPathHasSuffix(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldHasSuffix(FieldOutputPath, v))
}

// OutputPathEqualFold applies the EqualFold predicate on the "output_path" field.
func OutputPathEqualFold(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEqualFold(FieldOutputPath, v))
}

// OutputPathContainsFold applies the ContainsFold predicate on the "output_path" field.
func OutputPathContainsFold(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldContainsFold(FieldOutputPath, v))
}

// StageEQ applies the EQ predicate on the "stage" field.
func StageEQ(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldStage, v))
}

// StageNEQ applies the NEQ predicate on the "stage" field.
func StageNEQ(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNEQ(FieldStage, v))
}

// StageIn applies the In predicate on the "stage" field.
func StageIn(vs ...string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldIn(FieldStage, vs...))
}

// StageNotIn applies the NotIn predicate on the "stage" field.
func StageNotIn(vs ...string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNotIn(FieldStage, vs...))
}

// StageGT applies the GT predicate on the "stage" field.
func StageGT(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGT(FieldStage, v))
}

// StageGTE applies the GTE predicate on the "stage" field.
func StageGTE(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGTE(FieldStage, v))
}

// StageLT applies the LT predicate on the "stage" field.
func StageLT(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLT(FieldStage, v))
}

// StageLTE applies the LTE predicate on the "stage" field.
func StageLTE(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLTE(FieldStage, v))
}

// StageContains applies the Contains predicate on the "stage" field.
func StageContains(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldContains(FieldStage, v))
}

// StageHasPrefix applies the HasPrefix predicate on the "stage" field.
func StageHasPrefix(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldHasPrefix(FieldStage, v))
}

// StageHasSuffix applies the HasSuffix predicate on the "stage" field.
func StageHasSuffix(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldHasSuffix(FieldStage, v))
}

// StageEqualFold applies the EqualFold predicate on the "stage" field.
func StageEqualFold(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEqualFold(FieldStage, v))
}

// StageContainsFold applies the ContainsFold predicate on the "stage" field.
func StageContainsFold(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldContainsFold(FieldStage, v))
}

// ProgressEQ applies the EQ predicate on the "progress" field.
func ProgressEQ(v float64) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldProgress, v))
}

// ProgressNEQ applies the NEQ predicate on the "progress" field.
func ProgressNEQ(v float64) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNEQ(FieldProgress, v))
}

// ProgressIn applies the In predicate on the "progress" field.
func ProgressIn(vs ...float64) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldIn(FieldProgress, vs...))
}

// ProgressNotIn applies the NotIn predicate on the "progress" field.
func ProgressNotIn(vs ...float64) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNotIn(FieldProgress, vs...))
}

// ProgressGT applies the GT predicate on the "progress" field.
func ProgressGT(v float64) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGT(FieldProgress, v))
}

// ProgressGTE applies the GTE predicate on the "progress" field.
func ProgressGTE(v float64) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGTE(FieldProgress, v))
}

// ProgressLT applies the LT predicate on the "progress" field.
func ProgressLT(v float64) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLT(FieldProgress, v))
}

// ProgressLTE applies the LTE predicate on the "progress" field.
func ProgressLTE(v float64) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLTE(FieldProgress, v))
}

// CurrentFileEQ applies the EQ predicate on the "current_file" field.
func CurrentFileEQ(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldCurrentFile, v))
}

// CurrentFileNEQ applies the NEQ predicate on the "current_file" field.
func CurrentFileNEQ(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNEQ(FieldCurrentFile, v))
}

// CurrentFileIn applies the In predicate on the "current_file" field.
func CurrentFileIn(vs ...string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldIn(FieldCurrentFile, vs...))
}

// CurrentFileNotIn applies the NotIn predicate on the "current_file" field.
func CurrentFileNotIn(vs ...string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNotIn(FieldCurrentFile, vs...))
}

// CurrentFileGT applies the GT predicate on the "current_file" field.
func CurrentFileGT(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGT(FieldCurrentFile, v))
}

// CurrentFileGTE applies the GTE predicate on the "current_file" field.
func CurrentFileGTE(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGTE(FieldCurrentFile, v))
}

// CurrentFileLT applies the LT predicate on the "current_file" field.
func CurrentFileLT(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLT(FieldCurrentFile, v))
}

// CurrentFileLTE applies the LTE predicate on the "current_file" field.
func CurrentFileLTE(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLTE(FieldCurrentFile, v))
}

// CurrentFileContains applies the Contains predicate on the "current_file" field.
func CurrentFileContains(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldContains(FieldCurrentFile, v))
}

// CurrentFileHasPrefix applies the HasPrefix predicate on the "current_file" field.
func CurrentFileHasPrefix(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldHasPrefix(FieldCurrentFile, v))
}

// CurrentFileHasSuffix applies the HasSuffix predicate on the "current_file" field.
func CurrentFileHasSuffix(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldHasSuffix(FieldCurrentFile, v))
}

// CurrentFileIsNil applies the IsNil predicate on the "current_file" field.
func CurrentFileIsNil() predicate.ExportJob {
	return predicate.ExportJob(sql.FieldIsNull(FieldCurrentFile))
}

// CurrentFileNotNil applies the NotNil predicate on the "current_file" field.
func CurrentFileNotNil() predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNotNull(FieldCurrentFile))
}

// CurrentFileEqualFold applies the EqualFold predicate on the "current_file" field.
func CurrentFileEqualFold(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEqualFold(FieldCurrentFile, v))
}

// CurrentFileContainsFold applies the ContainsFold predicate on the "current_file" field.
func CurrentFileContainsFold(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldContainsFold(FieldCurrentFile, v))
}

// TotalFilesEQ applies the EQ predicate on the "total_files" field.
func TotalFilesEQ(v int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldTotalFiles, v))
}

// TotalFilesNEQ applies the NEQ predicate on the "total_files" field.
func TotalFilesNEQ(v int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNEQ(FieldTotalFiles, v))
}

// TotalFilesIn applies the In predicate on the "total_files" field.
func TotalFilesIn(vs ...int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldIn(FieldTotalFiles, vs...))
}

// TotalFilesNotIn applies the NotIn predicate on the "total_files" field.
func TotalFilesNotIn(vs ...int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNotIn(FieldTotalFiles, vs...))
}

// TotalFilesGT applies the GT predicate on the "total_files" field.
func TotalFilesGT(v int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGT(FieldTotalFiles, v))
}

// TotalFilesGTE applies the GTE predicate on the "total_files" field.
func TotalFilesGTE(v int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGTE(FieldTotalFiles, v))
}

// TotalFilesLT applies the LT predicate on the "total_files" field.
func TotalFilesLT(v int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLT(FieldTotalFiles, v))
}

// TotalFilesLTE applies the LTE predicate on the "total_files" field.
func TotalFilesLTE(v int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLTE(FieldTotalFiles, v))
}

// ProcessedFilesEQ applies the EQ predicate on the "processed_files" field.
func ProcessedFilesEQ(v int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldProcessedFiles, v))
}

// ProcessedFilesNEQ applies the NEQ predicate on the "processed_files" field.
func ProcessedFilesNEQ(v int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNEQ(FieldProcessedFiles, v))
}

// ProcessedFilesIn applies the In predicate on the "processed_files" field.
func ProcessedFilesIn(vs ...int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldIn(FieldProcessedFiles, vs...))
}

// ProcessedFilesNotIn applies the NotIn predicate on the "processed_files" field.
func ProcessedFilesNotIn(vs ...int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNotIn(FieldProcessedFiles, vs...))
}

// ProcessedFilesGT applies the GT predicate on the "processed_files" field.
func ProcessedFilesGT(v int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGT(FieldProcessedFiles, v))
}

// ProcessedFilesGTE applies the GTE predicate on the "processed_files" field.
func ProcessedFilesGTE(v int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGTE(FieldProcessedFiles, v))
}

// ProcessedFilesLT applies the LT predicate on the "processed_files" field.
func ProcessedFilesLT(v int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLT(FieldProcessedFiles, v))
}

// ProcessedFilesLTE applies the LTE predicate on the "processed_files" field.
func ProcessedFilesLTE(v int) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLTE(FieldProcessedFiles, v))
}

// IsCompleteEQ applies the EQ predicate on the "is_complete" field.
func IsCompleteEQ(v bool) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldIsComplete, v))
}

// IsCompleteNEQ applies the NEQ predicate on the "is_complete" field.
func IsCompleteNEQ(v bool) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNEQ(FieldIsComplete, v))
}

// HasErrorEQ applies the EQ predicate on the "has_error" field.
func HasErrorEQ(v bool) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldHasError, v))
}

// HasErrorNEQ applies the NEQ predicate on the "has_error" field.
func HasErrorNEQ(v bool) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNEQ(FieldHasError, v))
}

// ErrorMessageEQ applies the EQ predicate on the "error_message" field.
func ErrorMessageEQ(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldErrorMessage, v))
}

// ErrorMessageNEQ applies the NEQ predicate on the "error_message" field.
func ErrorMessageNEQ(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNEQ(FieldErrorMessage, v))
}

// ErrorMessageIn applies the In predicate on the "error_message" field.
func ErrorMessageIn(vs ...string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldIn(FieldErrorMessage, vs...))
}

// ErrorMessageNotIn applies the NotIn predicate on the "error_message" field.
func ErrorMessageNotIn(vs ...string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNotIn(FieldErrorMessage, vs...))
}

// ErrorMessageGT applies the GT predicate on the "error_message" field.
func ErrorMessageGT(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGT(FieldErrorMessage, v))
}

// ErrorMessageGTE applies the GTE predicate on the "error_message" field.
func ErrorMessageGTE(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGTE(FieldErrorMessage, v))
}

// ErrorMessageLT applies the LT predicate on the "error_message" field.
func ErrorMessageLT(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLT(FieldErrorMessage, v))
}

// ErrorMessageLTE applies the LTE predicate on the "error_message" field.
func ErrorMessageLTE(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLTE(FieldErrorMessage, v))
}

// ErrorMessageContains applies the Contains predicate on the "error_message" field.
func ErrorMessageContains(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldContains(FieldErrorMessage, v))
}

// ErrorMessageHasPrefix applies the HasPrefix predicate on the "error_message" field.
func ErrorMessageHasPrefix(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldHasPrefix(FieldErrorMessage, v))
}

// ErrorMessageHasSuffix applies the HasSuffix predicate on the "error_message" field.
func ErrorMessageHasSuffix(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldHasSuffix(FieldErrorMessage, v))
}

// ErrorMessageIsNil applies the IsNil predicate on the "error_message" field.
func ErrorMessageIsNil() predicate.ExportJob {
	return predicate.ExportJob(sql.FieldIsNull(FieldErrorMessage))
}

// ErrorMessageNotNil applies the NotNil predicate on the "error_message" field.
func ErrorMessageNotNil() predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNotNull(FieldErrorMessage))
}

// ErrorMessageEqualFold applies the EqualFold predicate on the "error_message" field.
func ErrorMessageEqualFold(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEqualFold(FieldErrorMessage, v))
}

// ErrorMessageContainsFold applies the ContainsFold predicate on the "error_message" field.
func ErrorMessageContainsFold(v string) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldContainsFold(FieldErrorMessage, v))
}

// IsCancelledEQ applies the EQ predicate on the "is_cancelled" field.
func IsCancelledEQ(v bool) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldIsCancelled, v))
}

// IsCancelledNEQ applies the NEQ predicate on the "is_cancelled" field.
func IsCancelledNEQ(v bool) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNEQ(FieldIsCancelled, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLTE(FieldUpdatedAt, v))
}

// CompletedAtEQ applies the EQ predicate on the "completed_at" field.
func CompletedAtEQ(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldEQ(FieldCompletedAt, v))
}

// CompletedAtNEQ applies the NEQ predicate on the "completed_at" field.
func CompletedAtNEQ(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNEQ(FieldCompletedAt, v))
}

// CompletedAtIn applies the In predicate on the "completed_at" field.
func CompletedAtIn(vs ...time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldIn(FieldCompletedAt, vs...))
}

// CompletedAtNotIn applies the NotIn predicate on the "completed_at" field.
func CompletedAtNotIn(vs ...time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNotIn(FieldCompletedAt, vs...))
}

// CompletedAtGT applies the GT predicate on the "completed_at" field.
func CompletedAtGT(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGT(FieldCompletedAt, v))
}

// CompletedAtGTE applies the GTE predicate on the "completed_at" field.
func CompletedAtGTE(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldGTE(FieldCompletedAt, v))
}

// CompletedAtLT applies the LT predicate on the "completed_at" field.
func CompletedAtLT(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLT(FieldCompletedAt, v))
}

// CompletedAtLTE applies the LTE predicate on the "completed_at" field.
func CompletedAtLTE(v time.Time) predicate.ExportJob {
	return predicate.ExportJob(sql.FieldLTE(FieldCompletedAt, v))
}

// CompletedAtIsNil applies the IsNil predicate on the "completed_at" field.
func CompletedAtIsNil() predicate.ExportJob {
	return predicate.ExportJob(sql.FieldIsNull(FieldCompletedAt))
}

// CompletedAtNotNil applies the NotNil predicate on the "completed_at" field.
func CompletedAtNotNil() predicate.ExportJob {
	return predicate.ExportJob(sql.FieldNotNull(FieldCompletedAt))
}

// HasProject applies the HasEdge predicate on the "project" edge.
func HasProject() predicate.ExportJob {
	return predicate.ExportJob(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, ProjectTable, ProjectColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasProjectWith applies the HasEdge predicate on the "project" edge with a given conditions (other predicates).
func HasProjectWith(preds ...predicate.Project) predicate.ExportJob {
	return predicate.ExportJob(func(s *sql.Selector) {
		step := newProjectStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ExportJob) predicate.ExportJob {
	return predicate.ExportJob(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ExportJob) predicate.ExportJob {
	return predicate.ExportJob(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ExportJob) predicate.ExportJob {
	return predicate.ExportJob(sql.NotPredicates(p))
}
