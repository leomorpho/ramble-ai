#!/bin/bash

echo "==============================================="
echo "Remote AI Backend Test Script"
echo "==============================================="
echo ""
echo "This script demonstrates how to run RambleAI with the PocketBase backend"
echo ""

echo "STEP 1: Start PocketBase Backend"
echo "---------------------------------"
echo "In Terminal 1, run:"
echo ""
echo "cd pb-be/pb"
echo "# Add your API keys to .env file first!"
echo "OPENROUTER_API_KEY=your-key OPENAI_API_KEY=your-key go run main.go serve --dev --http 0.0.0.0:8090"
echo ""

echo "STEP 2: Start Wails App with Remote Backend"
echo "--------------------------------------------"
echo "In Terminal 2, run:"
echo ""
echo "USE_REMOTE_AI_BACKEND=true REMOTE_AI_BACKEND_URL=http://localhost:8090 wails dev"
echo ""

echo "STEP 3: Configure Ramble AI API Key"
echo "------------------------------------"
echo "1. Open the app and go to Settings"
echo "2. In 'Remote AI Backend' section, enter:"
echo "   - Backend URL: http://localhost:8090 (or leave empty if using env var)"
echo "   - Ramble AI API Key: (generate one via the PocketBase API or admin UI)"
echo ""

echo "STEP 4: Test the Integration"
echo "-----------------------------"
echo "1. Try generating highlight suggestions (uses text processing endpoint)"
echo "2. Try transcribing a video (uses audio processing endpoint)"
echo ""

echo "API Key Generation (if needed):"
echo "-------------------------------"
echo "To generate a Ramble AI API key, you can:"
echo "1. Use the PocketBase admin UI at http://localhost:8090/_/"
echo "2. Or make a POST request to /api/generate-api-key with a valid user auth token"
echo ""

echo "Environment Variables Summary:"
echo "------------------------------"
echo "PocketBase Backend:"
echo "  OPENROUTER_API_KEY - Your OpenRouter API key for LLM calls"
echo "  OPENAI_API_KEY - Your OpenAI API key for Whisper transcription"
echo ""
echo "Wails App:"
echo "  USE_REMOTE_AI_BACKEND - Set to 'true' to use remote backend"
echo "  REMOTE_AI_BACKEND_URL - URL of the PocketBase backend"
echo ""